name: Android CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Install SDK packages
        run: |
          sdkmanager --install "platform-tools" "platforms;android-35" "build-tools;35.0.1"
          yes | sdkmanager --licenses

      - name: Make Gradle wrapper executable
        run: chmod +x ./gradlew

      - name: Configure Gradle (cache)
        uses: gradle/actions/setup-gradle@v3

      - name: Build & test
        run: ./gradlew --no-daemon clean test assembleDebug assembleRelease bundleRelease

      # Artifacts
      - name: Upload debug APK
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: app/build/outputs/apk/debug/*.apk
          if-no-files-found: error

      - name: Upload release APK (unsigned)
        uses: actions/upload-artifact@v4
        with:
          name: release-apk-unsigned
          path: app/build/outputs/apk/release/*.apk
          if-no-files-found: error

      - name: Upload release AAB (unsigned)
        uses: actions/upload-artifact@v4
        with:
          name: release-aab-unsigned
          path: app/build/outputs/bundle/release/*.aab
          if-no-files-found: error

      # OPTIONAL: sign artifacts (needs secrets). Uncomment block below and configure repo secrets:
      # Secrets to add in GitHub → Settings → Secrets and variables → Actions:
      #   ANDROID_KEYSTORE_BASE64  (base64 of your .jks)
      #   ANDROID_KEYSTORE_PASSWORD
      #   ANDROID_KEY_ALIAS
      #   ANDROID_KEY_ALIAS_PASSWORD
      #
      # - name: Prepare keystore (from secret)
      #   if: ${{ secrets.ANDROID_KEYSTORE_BASE64 != '' }}
      #   run: |
      #     echo "$ANDROID_KEYSTORE_BASE64" | base64 -d > keystore.jks
      #   env:
      #     ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
      #
      # - name: Sign release APK & AAB
      #   if: ${{ secrets.ANDROID_KEYSTORE_BASE64 != '' }}
      #   run: |
      #     BUILD_TOOLS="$ANDROID_HOME/build-tools/35.0.1"
      #     APK=$(ls app/build/outputs/apk/release/*.apk | head -n 1)
      #     AAB=$(ls app/build/outputs/bundle/release/*.aab | head -n 1)
      #     # Align APK
      #     "$BUILD_TOOLS/zipalign" -f 4 "$APK" app-release-aligned.apk
      #     # Sign APK
      #     "$BUILD_TOOLS/apksigner" sign --ks keystore.jks --ks-pass pass:$ANDROID_KEYSTORE_PASSWORD --ks-key-alias "$ANDROID_KEY_ALIAS" --key-pass pass:$ANDROID_KEY_ALIAS_PASSWORD --out app-release-signed.apk app-release-aligned.apk
      #     # (AAB signing is done by Play Console; optional: jarsigner if you need to pre-sign)
      #   env:
      #     ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
      #     ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
      #     ANDROID_KEY_ALIAS_PASSWORD: ${{ secrets.ANDROID_KEY_ALIAS_PASSWORD }}
      #
      # - name: Upload signed APK
      #   if: ${{ secrets.ANDROID_KEYSTORE_BASE64 != '' }}
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: release-apk-signed
      #     path: app-release-signed.apk
